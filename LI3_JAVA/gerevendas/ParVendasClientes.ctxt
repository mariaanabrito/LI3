#BlueJ class context
comment0.params=
comment0.target=ParVendasClientes()
comment0.text=\n\ Construtor\ Vazio\n
comment1.params=ven\ cli
comment1.target=ParVendasClientes(int,\ int)
comment1.text=\n\ Construtor\ por\ par\u00E2metros\n
comment2.params=p
comment2.target=ParVendasClientes(ParVendasClientes)
comment2.text=\n\ Construtor\ por\ c\u00F3pia\n
comment3.params=
comment3.target=int\ getVendasTotal()
comment3.text=\n\ Devolve\ n\u00FAmero\ de\ vendas\n
comment4.params=
comment4.target=int\ getClientesTotais()
comment4.text=\n\ Devolve\ n\u00FAmero\ de\ clientes\ diferentes\n
comment5.params=n
comment5.target=void\ adicionaVendas(int)
comment5.text=\n\ Adiciona\ um\ novo\ n\u00FAmero\ de\ vendas\n
comment6.params=n
comment6.target=void\ adicionaClientes(int)
comment6.text=\n\ Adiciona\ um\ novo\ n\u00FAmero\ de\ clientes\ diferentes\n
comment7.params=
comment7.target=ParVendasClientes\ clone()
comment7.text=\n\ Devolver\ uma\ c\u00F3pia\ da\ inst\u00E2ncia\n
comment8.params=obj
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\n\ Verifica\ a\ igualdade\ com\ outro\ objecto\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ Devolve\ representa\u00E7\u00E3o\ textual\ do\ n\u00FAmero\ de\ vendas\ e\ n\u00FAmero\ de\ clientes\ diferentes\ que\ as\ realizaram\n
numComments=10
