#BlueJ class context
comment0.params=
comment0.target=ComponentesProduto()
comment0.text=\n\ Construtor\ Vazio\n
comment1.params=p
comment1.target=ComponentesProduto(ComponentesProduto)
comment1.text=\n\ Construtor\ por\ c\u00F3pia\n
comment10.params=
comment10.target=int\ hashCode()
comment10.text=\n\ Redefini\u00E7\u00E3o\ do\ hashCode.\n
comment11.params=
comment11.target=ComponentesProduto\ clone()
comment11.text=\n\ Devolver\ uma\ c\u00F3pia\ da\ inst\u00E2ncia\n
comment12.params=o
comment12.target=boolean\ equals(java.lang.Object)
comment12.text=\n\ Verifica\ a\ igualdade\ com\ outro\ objecto\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\n\ Devolve\ representa\u00E7\u00E3o\ textual\ dos\ componentes\ do\ produto\n
comment2.params=pc\ unid
comment2.target=ComponentesProduto(double,\ int)
comment2.text=\n\ Construtor\ por\ par\u00E2metros\n
comment3.params=
comment3.target=int\ getQuantosProd()
comment3.text=\n\ Devolve\ n\u00FAmero\ de\ vezes\ que\ foi\ comprado.\n
comment4.params=
comment4.target=double\ getFatProd()
comment4.text=\n\ Devolve\ fatura\u00E7\u00E3o\ total\ do\ produto.\n
comment5.params=
comment5.target=int\ getUnidadesProd()
comment5.text=\n\ Devolve\ n\u00FAmero\ total\ de\ unidades\ compradas.\n
comment6.params=pc
comment6.target=void\ setFatProd(double)
comment6.text=\n\ Define\ fatura\u00E7\u00E3o\ total.\n
comment7.params=unid
comment7.target=void\ setUnidadesProd(int)
comment7.text=\n\ Define\ n\u00FAmero\ de\ unidades\ compradas.\n
comment8.params=q
comment8.target=void\ setQuantosProd(int)
comment8.text=\n\ Define\ n\u00FAmero\ de\ vezes\ que\ foi\ comprado.\n
comment9.params=pc\ unid
comment9.target=void\ adicionaComponentesProduto(double,\ int)
comment9.text=\n\ M\u00E9todo\ que\ atualiza\ os\ componentes\ de\ um\ dado\ produto.\ Soma\ os\ novos\ valores\ da\ fatura\u00E7\u00E3o\ e\ unidades\ aos\ j\u00E1\ existentes\ e\ incrementa\ o\ n\u00FAmero\ \n\ de\ vezes\ que\ foi\ comprado.\n
numComments=14
