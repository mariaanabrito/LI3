#BlueJ class context
comment0.params=
comment0.target=ParProdutoClientes()
comment0.text=\n\ Construtor\ vazio.\n
comment1.params=p\ c
comment1.target=ParProdutoClientes(java.lang.String,\ int)
comment1.text=\n\ Construtor\ por\ par\u00E2metro\n
comment2.params=p
comment2.target=ParProdutoClientes(ParProdutoClientes)
comment2.text=\n\ Construtor\ de\ c\u00F3pia\n
comment3.params=
comment3.target=java.lang.String\ getProduto()
comment3.text=\n\ M\u00E9todo\ que\ devolve\ o\ c\u00F3digo\ do\ produto.\n
comment4.params=
comment4.target=int\ getNumClientes()
comment4.text=\n\ M\u00E9todo\ que\ devolve\ o\ n\u00FAmero\ de\ clientes.\n
comment5.params=p
comment5.target=void\ addProduto(java.lang.String)
comment5.text=\n\ M\u00E9todo\ que\ define\ o\ c\u00F3digo\ do\ produto\ atrav\u00E9s\ do\ par\u00E2metro\ recebido\ pelo\ m\u00E9todo.\n
comment6.params=n
comment6.target=void\ addClientes(int)
comment6.text=\n\ M\u00E9todo\ que\ adiciona\ um\ n\u00FAmero\ de\ clientes\ comprados\ para\ um\ produto.\n
comment7.params=
comment7.target=ParProdutoClientes\ clone()
comment7.text=\n\ Devolve\ uma\ c\u00F3pia\ da\ inst\u00E2ncia.\n
comment8.params=obj
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\n\ M\u00E9todo\ que\ testa\ a\ igualdade\ entre\ objetos.\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ Representa\u00E7\u00E3o\ textual\ de\ ParProdutoClientes.\n
numComments=10
