#BlueJ class context
comment0.params=
comment0.target=ParProdutoUnidades()
comment0.text=\n\ Construtor\ vazio.\n
comment1.params=p\ q
comment1.target=ParProdutoUnidades(java.lang.String,\ int)
comment1.text=\n\ Construtor\ por\ par\u00E2metro.\n
comment2.params=p
comment2.target=ParProdutoUnidades(ParProdutoUnidades)
comment2.text=\n\ Construtor\ de\ c\u00F3pia\n
comment3.params=
comment3.target=java.lang.String\ getProduto()
comment3.text=\n\ M\u00E9todo\ que\ devolve\ o\ c\u00F3digo\ de\ produto.\n
comment4.params=
comment4.target=int\ getQuantos()
comment4.text=\n\ M\u00E9todo\ que\ devolve\ as\ quantidades.\n
comment5.params=n
comment5.target=void\ adicionaQuantidade(int)
comment5.text=\n\ M\u00E9todo\ que\ adiciona\ um\ n\u00FAmero\ \u00E0s\ quantidades.\n
comment6.params=
comment6.target=ParProdutoUnidades\ clone()
comment6.text=\n\ Devolve\ uma\ c\u00F3pia\ da\ inst\u00E2ncia.\n
comment7.params=obj
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ M\u00E9todo\ que\ testa\ a\ igualdade\ entre\ dois\ objetos.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Representa\u00E7\u00E3o\ textual\ de\ ParProdutoUnidades\n
numComments=9
