#BlueJ class context
comment0.params=p\ pc\ q\ md\ c\ m\ f
comment0.target=Venda(java.lang.String,\ double,\ int,\ java.lang.String,\ java.lang.String,\ int,\ int)
comment0.text=\n\ Construtor\ por\ par\u00E2metro.\n
comment1.params=v
comment1.target=Venda(Venda)
comment1.text=\n\ Construtor\ por\ c\u00F3pia\n
comment10.params=
comment10.target=Venda\ clone()
comment10.text=\n\ Devolve\ uma\ inst\u00E2ncia\ da\ classe.\n
comment11.params=obj
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\n\ M\u00E9todo\ que\ testa\ a\ igualdade\ entre\ dois\ objetos.\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ Representa\u00E7\u00E3o\ textual\ de\ Venda.\n\ Observa\u00E7\u00E3o\ \:\ produto-pre\u00E7o-quantidade-modo-cliente-mes-filial\n
comment2.params=
comment2.target=int\ getQuantos()
comment2.text=\n\ M\u00E9todo\ que\ devolve\ a\ quantidade\ da\ venda.\n
comment3.params=
comment3.target=int\ getMes()
comment3.text=\n\ M\u00E9todo\ que\ devolve\ o\ m\u00EAs\ da\ venda.\n
comment4.params=
comment4.target=int\ getFilial()
comment4.text=\n\ M\u00E9todo\ que\ devolve\ a\ filial\ da\ venda.\n
comment5.params=
comment5.target=java.lang.String\ getProduto()
comment5.text=\n\ M\u00E9todo\ que\ devolve\ o\ produto\ da\ venda.\n
comment6.params=
comment6.target=java.lang.String\ getCliente()
comment6.text=\n\ M\u00E9todo\ que\ devolve\ o\ cliente\ da\ venda.\n
comment7.params=
comment7.target=double\ getPreco()
comment7.text=\n\ M\u00E9todo\ que\ devolve\ o\ pre\u00E7o\ da\ venda.\n
comment8.params=
comment8.target=java.lang.String\ getModo()
comment8.text=\n\ M\u00E9todo\ que\ devolve\ o\ modo\ da\ venda.\n
comment9.params=catclientes\ catprods
comment9.target=boolean\ vendaValida(java.util.TreeSet,\ java.util.TreeSet)
comment9.text=\n\ M\u00E9todo\ que\ testa\ se\ uma\ venda\ \u00E9\ v\u00E1lida.\n
numComments=13
