#BlueJ class context
comment0.params=
comment0.target=Hipermercado()
comment0.text=\n\ Construtor\ vazio.\n
comment1.params=hiper
comment1.target=Hipermercado(Hipermercado)
comment1.text=\n\ Construtor\ de\ c\u00F3pia.\n
comment10.params=c
comment10.target=int\ ascii(char)
comment10.text=\n\ M\u00E9todo\ que\ atrav\u00E9s\ do\ caracter\ recebido\ pelo\ par\u00E2metro\ retorna\ o\ valor\ ASCII\ desse\ caracter..\n
comment11.params=v
comment11.target=void\ updateFilial(Venda)
comment11.text=\n\ M\u00E9todo\ que\ adiciona\ uma\ venda\ a\ uma\ filial.\n
comment12.params=v
comment12.target=void\ updateFaturacao(Venda)
comment12.text=\n\ M\u00E9todo\ que\ adiciona\ uma\ venda\ \u00E0\ fatura\u00E7\u00E3o.\n
comment13.params=fich
comment13.target=void\ gravaObj(java.lang.String)
comment13.text=\n\ M\u00E9todo\ que\ guarda\ a\ classe\ Hipermercado\ num\ ficheiro.\n
comment14.params=ficheiro
comment14.target=Hipermercado\ leObjeto(java.lang.String)
comment14.text=\n\ M\u00E9todo\ que\ l\u00EA\ a\ classe\ Hipermercado\ de\ um\ ficheiro.\n
comment15.params=linha
comment15.target=Venda\ parseLinhaVenda(java.lang.String)
comment15.text=\n\ M\u00E9todo\ que\ recebe\ uma\ linha,\ referente\ a\ uma\ venda,\ divide-a\ em\ par\u00E2metros\ de\ uma\ venda,\ e\ cria\ uma\ Venda\ atrav\u00E9s\ das\ \n\ divis\u00F5es\ da\ linha.\n
comment16.params=mes
comment16.target=int\ comprasNumMes(int)
comment16.text=\n\ M\u00E9todo\ que\ calcula\ o\ n\u00FAmero\ de\ contas\ efetuadas\ num\ m\u00EAs.\n
comment17.params=mes\ fili
comment17.target=double\ faturacaoNumMes(int,\ int)
comment17.text=\n\ M\u00E9todo\ que\ \ calcula\ a\ fatura\u00E7\u00E3o\ num\ m\u00EAs\ para\ uma\ determinada\ filial.\n
comment18.params=mes
comment18.target=int\ clientesDistintosNumMes(int)
comment18.text=\n\ M\u00E9todo\ que\ calcula\ o\ n\u00FAmero\ de\ clientes\ distintos\ que\ realizaram\ compras\ num\ m\u00EAs.\n
comment19.params=mes
comment19.target=ParVendasClientes\ vendasNumMes(int)
comment19.text=\n\ M\u00E9todo\ que\ calcula\ o\ n\u00FAmero\ de\ vendas\ realizadas\ e\ o\ total\ de\ clientes\ distintos\ que\ as\ realizaram\ num\ determinado\ m\u00EAs\n\ recebido\ como\ par\u00E2metro.\ Devolve\ um\ para\ com\ estas\ duas\ componentes.\n
comment2.params=
comment2.target=Catalogo\ getCatClientes()
comment2.text=\n\ M\u00E9todo\ que\ retorna\ o\ cat\u00E1logo\ de\ clientes.\n
comment20.params=fi\ mes\ par\ cli
comment20.target=void\ vendasFilial(Filial,\ int,\ ParVendasClientes,\ java.util.TreeSet)
comment20.text=\n\ M\u00E9todo\ auxiliar\ de\ vendasNumMes\ que\ calcula\ o\ n\u00FAmero\ de\ clientes\ e\ vendas\ para\ uma\ \u00FAnica\ filial.\n
comment21.params=
comment21.target=Par3MaioresCompradores\ top3ClientesPorFilial()
comment21.text=\n\ M\u00E9todo\ que\ calcula\ os\ tr\u00EAs\ maiores\ compradores,\ em\ termos\ de\ fatura\u00E7\u00E3o,\ para\ cada\ filial.\n\ Devolve\ um\ par\ com\ os\ tr\u00EAs\ maiores\ compradores\ para\ cada\ filial.\n
comment22.params=par\ fi\ n
comment22.target=void\ top3(Par3MaioresCompradores,\ Filial,\ int)
comment22.text=\n\ M\u00E9todo\ auxiliar\ de\ top3ClientesPorFilial\ que\ calcula\ o\ top\ 3\ de\ clientes\ para\ uma\ \u00FAnica\ filial.\n
comment23.params=codigo\ mes
comment23.target=TuploProdutosFat\ infoDeCliente(java.lang.String,\ int)
comment23.text=\n\ M\u00E9todo\ que,\ atrav\u00E9s\ do\ c\u00F3digo\ de\ um\ cliente\ e\ um\ m\u00EAs\ recebidos\ como\ par\u00E2metro,\ calcula\ quantas\ compras\ ele\ realizou,\n\ quantos\ produtos\ distintos\ comprou,\ e\ quanto\ gastou\ no\ total.\ Devolve\ um\ tuplo\ com\ estas\ tr\u00EAs\ componentes.\n\ S\u00E3o\ atiradas\ exce\u00E7\u00F5es\ se\ o\ cliente\ n\u00E3o\ existir.\n
comment24.params=produto\ mes
comment24.target=TuploProdutosFat\ infoDeProduto(java.lang.String,\ int)
comment24.text=\n\ M\u00E9todo\ que,\ atrav\u00E9s\ do\ c\u00F3digo\ de\ um\ produto\ e\ um\ m\u00EAs\ recebidos\ como\ par\u00E2metro,\ calcula\ quantas\ vezes\ foi\ comprado,\ \n\ por\ quantos\ clientes\ distintos,\ e\ o\ total\ faturado\ .\ Devolve\ um\ tuplo\ com\ estas\ tr\u00EAs\ componentes.\n\ S\u00E3o\ atiradas\ exce\u00E7\u00F5es\ se\ o\ cliente\ n\u00E3o\ existir.\n
comment25.params=
comment25.target=java.util.Set\ produtosNaoComprados()
comment25.text=\n\ Fun\u00E7\u00E3o\ que\ calcula\ todos\ os\ produtos\ que\ n\u00E3o\ foram\ comprados.\n\ Devolve\ um\ conjunto\ desses\ ordenados\ alfabeticamente.\n
comment26.params=numero
comment26.target=java.util.Set\ produtosMaisVendidos(int)
comment26.text=\n\ M\u00E9todo\ que\ calcula\ o\ n\u00FAmero\ N,\ sendo\ N\ passado\ como\ par\u00E2metro,\ de\ produtos\ mais\ vendidos.\ Devolve\ um\ conjunto\ com\ estes\ produtos.\n\ Atira\ uma\ exce\u00E7\u00E3o\ se\ o\ n\u00FAmero\ passado\ como\ par\u00E2metro\ for\ inv\u00E1lido.\n
comment27.params=todos\ fi
comment27.target=void\ produtoMaisVendidoFilial(java.util.TreeMap,\ Filial)
comment27.text=\n\ M\u00E9todo\ auxiliar\ a\ produtosMaisVendidos\ que\ calcula\ os\ produtos\ mais\ vendidos\ por\ filial,\ adicionando-os\ a\ uma\ correspond\u00EAncia,\ recebida\ como\ par\u00E2metro,\ com\ os\ totais\ \n\ para\ as\ filiais\ que\ (eventualmente)\ j\u00E1\ foram\ calculadas.\n
comment28.params=cli
comment28.target=java.util.Set\ produtosMaisCompradosCliente(java.lang.String)
comment28.text=\n\ M\u00E9todo\ que\ calcula\ os\ produtos\ mais\ comprados\ por\ um\ determinado\ cliente\ recebido\ como\ par\u00E2metro.\ Devolve\ um\ conjunto\ de\ pares\ que\ cont\u00E9m\ um\ produto\ e\ o\ n\u00FAmero\ de\ vezes\n\ que\ foi\ comprado.\n\ Atira-se\ uma\ exce\u00E7\u00E3o\ se\ o\ cliente\ passado\ como\ par\u00E2metro\ n\u00E3o\ existe.\n
comment29.params=cli\ fi\ pares
comment29.target=void\ produtosDoCliente(java.lang.String,\ Filial,\ java.util.Map)
comment29.text=\n\ M\u00E9todo\ auxiliar\ de\ produtosMaisCompradosCliente\ que\ calcula\ para\ uma\ filial,\ os\ produtos\ comprados\ por\ um\ cliente\ e\ as\ quantidades\ destes.\n
comment3.params=
comment3.target=Catalogo\ getCatProdutos()
comment3.text=\n\ M\u00E9todo\ que\ retorna\ o\ cat\u00E1logo\ de\ produtos.\n
comment30.params=numero
comment30.target=java.util.ArrayList\ clientesProdutosDiferentes(int)
comment30.text=\n\ M\u00E9todo\ que\ calcula\ o\ n\u00FAmero\ N,\ passado\ como\ par\u00E2metro,\ de\ clientes\ que\ compraram\ mais\ clientes\ distintos.\ Devolve\ uma\ lista\ de\ pares\ que\ cont\u00E9m\ um\ c\u00F3digo\ de\ cliente\n\ e\ um\ conjunto\ dos\ produtos\ comprados\ por\ esse\ cliente\ (a\ partir\ deste\ conjunto\ \u00E9\ poss\u00EDvel\ calcular\ o\ n\u00FAmero\ de\ produtos\ distintos).\n\ Atira-se\ uma\ exce\u00E7\u00E3o\ se\ o\ n\u00FAmero\ passado\ como\ par\u00E2metro\ \u00E9\ inv\u00E1lido.\n
comment31.params=total\ fi
comment31.target=void\ clientesCompraProdutos(java.util.Map,\ Filial)
comment31.text=\n\ M\u00E9todo\ auxiliar\ de\ clientesProdutosDiferentes\ que,\ numa\ filial,\ calcula,\ para\ cada\ cliente,\ os\ produtos\ comprados.\n
comment32.params=produto\ numero
comment32.target=java.util.Set\ produtoNClientesFaturado(java.lang.String,\ int)
comment32.text=\n\ M\u00E9todo\ que\ calcula\ o\ n\u00FAmero\ N,\ passado\ como\ par\u00E2metro,\ de\ clientes\ que\ mais\ compraram\ o\ produto\ X,\ sendo\ X\ tamb\u00E9m\ recebido\ como\ par\u00E2metro.\ Devolve\ um\ conjunto\ de\ pares\ que\ \n\ cont\u00E9m\ o\ cliente\ que\ comprou\ o\ produto,\ quantas\ vezes\ o\ fez,\ e\ o\ total\ gasto\ por\ esse\ cliente.\ \n\ S\u00E3o\ atiradas\ exce\u00E7\u00F5es\ se\ o\ produto\ recebido\ for\ inv\u00E1lido\ ou\ o\ n\u00FAmero\ recebido\ tamb\u00E9m\ for\ inv\u00E1lido.\n
comment33.params=prod\ compras\ fi
comment33.target=void\ atualizaComprasDoProduto(java.lang.String,\ java.util.Map,\ Filial)
comment33.text=\n\ M\u00E9todo\ auxiliar\ de\ produtoNClientesFaturado\ que\ calcula,\ para\ uma\ dada\ filial\ e\ um\ dado\ produto,\ os\ clientes\ que\ o\ compraram,\ quantas\ vezes,\ e\ quanto\ gastaram.\n
comment34.params=
comment34.target=Hipermercado\ clone()
comment34.text=\n\ Devolve\ uma\ c\u00F3pia\ da\ inst\u00E2ncia.\n
comment35.params=o
comment35.target=boolean\ equals(java.lang.Object)
comment35.text=\n\ M\u00E9todo\ que\ testa\ a\ igualdade\ entre\ dois\ objetos.\n
comment36.params=
comment36.target=java.lang.String\ toString()
comment36.text=\n\ Representa\u00E7\u00E3o\ textual\ de\ Hipermercado.\n
comment4.params=
comment4.target=java.util.ArrayList\ getFiliaisHiper()
comment4.text=\n\ M\u00E9todo\ que\ retorna\ as\ tr\u00EAs\ filiais.\n
comment5.params=i
comment5.target=Filial\ getFilialHiper(int)
comment5.text=\n\ M\u00E9todo\ que\ retorna\ uma\ filial\ de\ acordo\ com\ o\ par\u00E2metro\ recebido\ pelo\ m\u00E9todo.\n
comment6.params=
comment6.target=Faturacao\ getFaturacaoHiper()
comment6.text=\n\ M\u00E9todo\ que\ retorna\ a\ fatura\u00E7\u00E3o.\n
comment7.params=
comment7.target=void\ limpaEstruturas()
comment7.text=\n\ M\u00E9todo\ que\ limpa\ esvazia\ as\ estruturas.\n
comment8.params=cliente
comment8.target=void\ adicionaCliente(java.lang.String)
comment8.text=\n\ M\u00E9todo\ que\ adiciona\ um\ cliente\ ao\ cat\u00E1logo\ de\ clientes.\n
comment9.params=produto
comment9.target=void\ adicionaProduto(java.lang.String)
comment9.text=\n\ M\u00E9todo\ que\ adiciona\ um\ produto\ ao\ cat\u00E1logo\ de\ produtos.\n
numComments=37
