#BlueJ class context
comment0.params=
comment0.target=ParClienteCompraFaturado()
comment0.text=\n\ Construtor\ Vazio\n
comment1.params=cli\ q\ fat
comment1.target=ParClienteCompraFaturado(java.lang.String,\ int,\ double)
comment1.text=\n\ Construtor\ por\ par\u00E2metros\n
comment10.params=obj
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\n\ Verifica\ a\ igualdade\ com\ outro\ objecto\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\n\ Devolve\ representa\u00E7\u00E3o\ textual\ do\ cliente,\ do\ n\u00FAmero\ de\ vezes\ que\ comprou\ um\ produto\ e\ o\ dinheiro\ nele\ gasto\n
comment2.params=cf
comment2.target=ParClienteCompraFaturado(ParClienteCompraFaturado)
comment2.text=\n\ Construtor\ por\ c\u00F3pia\n
comment3.params=
comment3.target=java.lang.String\ getCliente()
comment3.text=\n\ Devolve\ c\u00F3digo\ do\ cliente\n
comment4.params=
comment4.target=int\ getQuantidades()
comment4.text=\n\ Devolve\ n\u00FAmero\ de\ vezes\ que\ o\ comprou\n
comment5.params=
comment5.target=double\ getFaturado()
comment5.text=\n\ Devolve\ total\ de\ dinheiro\ que\ gastou\ no\ produto\n
comment6.params=cli
comment6.target=void\ setCliente(java.lang.String)
comment6.text=\n\ Define\ o\ cliente\n
comment7.params=n
comment7.target=void\ adicionaQuantidade(int)
comment7.text=\n\ Define\ n\u00FAmero\ de\ vezes\ comprado\n
comment8.params=fat
comment8.target=void\ adicionaFaturado(double)
comment8.text=\n\ Define\ total\ de\ dinheiro\ gasto\n
comment9.params=
comment9.target=ParClienteCompraFaturado\ clone()
comment9.text=\n\ Devolver\ uma\ c\u00F3pia\ da\ inst\u00E2ncia\n
numComments=12
