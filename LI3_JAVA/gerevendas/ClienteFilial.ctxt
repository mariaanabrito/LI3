#BlueJ class context
comment0.params=
comment0.target=ClienteFilial()
comment0.text=\n\ Construtor\ vazio.\n
comment1.params=cli
comment1.target=ClienteFilial(java.util.HashMap)
comment1.text=\n\ Construtor\ por\ par\u00E2metro.\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ Representa\u00E7\u00E3o\ textual\ de\ ClienteFilial.\n
comment2.params=cf
comment2.target=ClienteFilial(ClienteFilial)
comment2.text=\n\ Construtor\ de\ c\u00F3pia.\n
comment3.params=cli
comment3.target=void\ setClientesFilial(java.util.HashMap)
comment3.text=\n\ Define\ a\ correspond\u00EAncia\ atrav\u00E9s\ do\ par\u00E2metro\ recebido\ pelo\ m\u00E9todo.\n
comment4.params=
comment4.target=java.util.HashMap\ getClientesFilial()
comment4.text=\n\ Retorna\ a\ correspond\u00EAncia\ da\ classe\ ClienteFilial.\n
comment5.params=cod
comment5.target=Cliente\ getClientePorCodigo(java.lang.String)
comment5.text=\n\ M\u00E9todo\ que\ retorna\ um\ Cliente\ atrav\u00E9s\ do\ c\u00F3digo\ de\ cliente\ recebido\ no\ par\u00E2metro.\n
comment6.params=cli\ prod\ prec\ quantos
comment6.target=void\ adicionaClienteFilial(java.lang.String,\ java.lang.String,\ double,\ int)
comment6.text=\n\ M\u00E9todo\ que\ adiciona\ o\ c\u00F3digo\ de\ cliente,\ um\ c\u00F3digo\ de\ produto,\ um\ pre\u00E7o,\ um\ valor\n\ de\ quantidades\ o\ adiciona\ \u00E0\ classe\n
comment7.params=
comment7.target=int\ hashCode()
comment7.text=\n\ M\u00E9todo\ de\ hash.\n
comment8.params=
comment8.target=ClienteFilial\ clone()
comment8.text=\n\ Devolve\ uma\ c\u00F3pia\ da\ inst\u00E2ncia.\n
comment9.params=obj
comment9.target=boolean\ equals(java.lang.Object)
comment9.text=\n\ M\u00E9todo\ que\ verifica\ a\ igualdade\ entre\ dois\ objetos.\n
numComments=11
