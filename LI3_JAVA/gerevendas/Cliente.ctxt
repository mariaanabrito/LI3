#BlueJ class context
comment0.params=
comment0.target=Cliente()
comment0.text=\n\ Construtor\ vazio.\n
comment1.params=prec\ quantos\ prods
comment1.target=Cliente(java.util.ArrayList,\ java.util.ArrayList,\ java.util.ArrayList)
comment1.text=\n\ Construtor\ por\ par\u00E2metro\n
comment10.params=
comment10.target=java.util.ArrayList\ getQuantidadesFil()
comment10.text=\n\ M\u00E9todo\ que\ retorna\ todas\ as\ quantidades\ dos\ produtos.\n
comment11.params=
comment11.target=java.util.ArrayList\ getProdutosFil()
comment11.text=\n\ M\u00E9todo\ que\ retorna\ todos\ os\ produtos.\n
comment12.params=prec\ quantos\ prod
comment12.target=void\ adicionaCliente(double,\ int,\ java.lang.String)
comment12.text=\n\ M\u00E9todo\ que\ adiciona\ um\ produto\ comprado\ pelo\ cliente,\ as\ quantidades,\ e\ o\ pre\u00E7o\ dele.\n
comment13.params=
comment13.target=int\ getNumVendas()
comment13.text=\n\ M\u00E9todo\ que\ retorna\ o\ n\u00FAmero\ de\ compras\ efetuadas\ pelo\ cliente.\n
comment14.params=
comment14.target=double\ getFaturacao()
comment14.text=\n\ M\u00E9todo\ que\ retorna\ o\ total\ gasto\ por\ um\ cliente.\n
comment15.params=
comment15.target=int\ hashCode()
comment15.text=\n\ M\u00E9todo\ de\ hash.\n
comment16.params=
comment16.target=Cliente\ clone()
comment16.text=\n\ Devolve\ uma\ c\u00F3pia\ da\ inst\u00E2ncia.\n
comment17.params=obj
comment17.target=boolean\ equals(java.lang.Object)
comment17.text=\n\ M\u00E9todo\ que\ verifica\ a\ igualdade\ entre\ dois\ objetos.\n
comment18.params=
comment18.target=java.lang.String\ toString()
comment18.text=\n\ Representa\u00E7\u00E3o\ textual\ de\ um\ cliente.\n
comment2.params=c
comment2.target=Cliente(Cliente)
comment2.text=\n\ Construtor\ de\ c\u00F3pia\n
comment3.params=prec
comment3.target=void\ setPrecoFil(java.util.ArrayList)
comment3.text=\n\ Definir\ todos\ os\ pre\u00E7os\ dos\ produtos\ comprados\ atrav\u00E9s\ do\ par\u00E2metro\ recebido\ no\ m\u00E9todo.\n
comment4.params=quantos
comment4.target=void\ setQuantidadesFil(java.util.ArrayList)
comment4.text=\n\ Definir\ todas\ as\ quantidades\ dos\ produtos\ comprados\ atrav\u00E9s\ do\ par\u00E2metro\ recebido\ no\ m\u00E9todo.\n
comment5.params=prods
comment5.target=void\ setProdutosFil(java.util.ArrayList)
comment5.text=\n\ Definir\ todos\ os\ produtos\ comprados\ atrav\u00E9s\ do\ par\u00E2metro\ recebido\ no\ m\u00E9todo.\n
comment6.params=i
comment6.target=double\ getPrecoIndice(int)
comment6.text=\n\ M\u00E9todo\ que\ retorna\ um\ determinado\ pre\u00E7o\ de\ um\ produto.\n
comment7.params=i
comment7.target=int\ getQuantidadesIndice(int)
comment7.text=\n\ M\u00E9todo\ que\ retorna\ umas\ determinadas\ quantidades\ \ de\ um\ produto.\n
comment8.params=i
comment8.target=java.lang.String\ getProdutoIndice(int)
comment8.text=\n\ M\u00E9todo\ que\ retorna\ um\ determinado\ produto.\n
comment9.params=
comment9.target=java.util.ArrayList\ getPrecoFil()
comment9.text=\n\ M\u00E9todo\ que\ retorna\ todos\ os\ pre\u00E7os\ dos\ produtos.\n
numComments=19
