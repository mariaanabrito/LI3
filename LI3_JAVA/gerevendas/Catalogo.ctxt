#BlueJ class context
comment0.params=
comment0.target=Catalogo()
comment0.text=\n\ Construtor\ Vazio\n
comment1.params=cat
comment1.target=Catalogo(java.util.ArrayList)
comment1.text=\n\ Construtor\ por\ par\u00E2metro\n
comment2.params=c
comment2.target=Catalogo(Catalogo)
comment2.text=\n\ Construtor\ por\ c\u00F3pia\n
comment3.params=cat
comment3.target=void\ setCatalogo(java.util.ArrayList)
comment3.text=\n\ Define\ a\ lista\ dos\ c\u00F3digos.\n
comment4.params=
comment4.target=java.util.List\ getCatalogo()
comment4.text=\n\ Devolve\ a\ lista\ completa\ dos\ c\u00F3digos.\n
comment5.params=indice
comment5.target=java.util.Set\ getSubCatalogo(int)
comment5.text=\n\ Devolve\ o\ conjunto\ dos\ c\u00F3digos\ que\ se\ encontram\ numa\ dada\ posi\u00E7\u00E3o\ da\ lista.\n
comment6.params=
comment6.target=Catalogo\ clone()
comment6.text=\n\ Devolver\ uma\ c\u00F3pia\ da\ inst\u00E2ncia\n
comment7.params=codigo\ indice
comment7.target=void\ adicionaCodigo(java.lang.String,\ int)
comment7.text=\n\ Adiciona\ um\ novo\ c\u00F3digo\ ao\ conjunto\ que\ se\ encontra\ numa\ dada\ posi\u00E7\u00E3o\ da\ lista.\n
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\n\ Verifica\ a\ igualdade\ com\ outro\ objecto\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ Devolve\ representa\u00E7\u00E3o\ textual\ dos\ c\u00F3digos\n
numComments=10
