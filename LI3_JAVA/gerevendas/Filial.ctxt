#BlueJ class context
comment0.params=
comment0.target=Filial()
comment0.text=\n\ Construtor\ vazio.\n
comment1.params=fili
comment1.target=Filial(java.util.HashMap)
comment1.text=\n\ Construtor\ por\ par\u00E2metros\n
comment10.params=obj
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\n\ M\u00E9todo\ que\ verifica\ a\ igualdade\ entre\ dois\ objetos.\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\n\ Representa\u00E7\u00E3o\ textual\ de\ uma\ filial.\n
comment2.params=fi
comment2.target=Filial(Filial)
comment2.text=\n\ Construtor\ de\ c\u00F3pia.\n
comment3.params=fili
comment3.target=void\ setFilial(java.util.HashMap)
comment3.text=\n\ Definir\ uma\ filial\ atrav\u00E9s\ do\ par\u00E2metro\ dado\ pelo\ m\u00E9todo.\n
comment4.params=
comment4.target=java.util.HashMap\ getFilial()
comment4.text=\n\ M\u00E9todo\ que\ retorna\ a\ filial.\n
comment5.params=
comment5.target=void\ limpaFilial()
comment5.text=\n\ M\u00E9todo\ que\ limpa\ a\ estrutura\ da\ filial\n
comment6.params=m
comment6.target=ClienteFilial\ getFilialMes(int)
comment6.text=\n\ Obter\ os\ dados\ de\ uma\ filial(ClienteFilial)\ num\ determinado\ m\u00EAs.\n
comment7.params=mes\ cli\ prod\ pre\ quantos
comment7.target=void\ adicionaFilial(int,\ java.lang.String,\ java.lang.String,\ double,\ int)
comment7.text=\n\ Adiciona,\ num\ determinado\ m\u00EAs,\ um\ produto\ comprado\ por\ um\ determinado\ cliente.\n
comment8.params=
comment8.target=int\ hashCode()
comment8.text=\n\ M\u00E9todo\ de\ hash\ para\ o\ HashMap\ da\ classe\n
comment9.params=
comment9.target=Filial\ clone()
comment9.text=\n\ Devolve\ uma\ c\u00F3pia\ da\ inst\u00E2ncia.\n
numComments=12
